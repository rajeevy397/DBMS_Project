{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [moviesByJames, setMoviesByJames] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Load data on component mount\n  useEffect(() => {\n    // Fetch movies directed by 'Hitchcock'\n    axios.get(`${BASE_URL}/movies/hitchcock`).then(response => setMovies(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch movies with multiple actors\n    axios.get(`${BASE_URL}/movies/multiple-actors`).then(response => setMovies(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios.get(`${BASE_URL}/actors/2000-2015`).then(response => setActors(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios.get(`${BASE_URL}/movies/ratings`).then(response => setRatings(response.data)).catch(error => setError(error.response.data));\n  }, []);\n\n  // Handle update rating click\n  const handleUpdateRating = () => {\n    axios.put(`${BASE_URL}/movies/spielberg`).then(() => {\n      // Refresh movie ratings\n      axios.get(`${BASE_URL}/movies/ratings`).then(response => setRatings(response.data)).catch(error => setError(error.response.data));\n    }).catch(error => setError(error.response.data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies Directed by Hitchcock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.Mov_Title\n      }, movie.Mov_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies with Multiple Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.Mov_Title\n      }, movie.Mov_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actors Who Acted in a Movie Before 2000 and After 2015\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), actors.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: actors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: actor.Act_Name\n      }, actor.Act_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No actors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), ratings.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [rating.Mov_Title, \": \", rating.Max_Stars, \" stars\"]\n      }, rating.Mov_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No ratings found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateRating,\n      children: \"Update Ratings for Spielberg Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PlnzbBvCSuP1p5mDUdFADhb3qTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BASE_URL","App","movies","setMovies","moviesByJames","setMoviesByJames","actors","setActors","ratings","setRatings","error","setError","get","then","response","data","catch","handleUpdateRating","put","length","map","movie","Mov_Title","Mov_id","actor","Act_Name","Act_id","rating","Max_Stars"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3001';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [moviesByJames, setMoviesByJames] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Load data on component mount\n  useEffect(() => {\n    // Fetch movies directed by 'Hitchcock'\n    axios\n      .get(`${BASE_URL}/movies/hitchcock`)\n      .then((response) => setMovies(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch movies with multiple actors\n    axios\n      .get(`${BASE_URL}/movies/multiple-actors`)\n      .then((response) => setMovies(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios\n      .get(`${BASE_URL}/actors/2000-2015`)\n      .then((response) => setActors(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios\n      .get(`${BASE_URL}/movies/ratings`)\n      .then((response) => setRatings(response.data))\n      .catch((error) => setError(error.response.data));\n  }, []);\n\n  // Handle update rating click\n  const handleUpdateRating = () => {\n    axios\n      .put(`${BASE_URL}/movies/spielberg`)\n      .then(() => {\n        // Refresh movie ratings\n        axios\n          .get(`${BASE_URL}/movies/ratings`)\n          .then((response) => setRatings(response.data))\n          .catch((error) => setError(error.response.data));\n      })\n      .catch((error) => setError(error.response.data));\n  };\n\n  return (\n    <div>\n      <h1>Movies Directed by Hitchcock</h1>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.Mov_id}>{movie.Mov_Title}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n\n      <h1>Movies with Multiple Actors</h1>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.Mov_id}>{movie.Mov_Title}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n\n      <h1>Actors Who Acted in a Movie Before 2000 and After 2015</h1>\n      {actors.length > 0 ? (\n        <ul>\n          {actors.map((actor) => (\n            <li key={actor.Act_id}>{actor.Act_Name}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No actors found.</p>\n      )}\n\n      <h1>Movie Ratings</h1>\n      {ratings.length > 0 ? (\n        <ul>\n          {ratings.map((rating) => (\n            <li key={rating.Mov_id}>\n              {rating.Mov_Title}: {rating.Max_Stars} stars\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No ratings found.</p>\n      )}\n\n      <button onClick={handleUpdateRating}>\n        Update Ratings for Spielberg Movies\n      </button>\n\n      {error && (\n        <div>\n          <h2>Error</h2>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}