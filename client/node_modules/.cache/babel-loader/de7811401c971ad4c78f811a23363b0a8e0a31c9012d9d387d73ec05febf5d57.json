{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieSearch from './Components/MovieSearch/MovieSearch';\nimport MovieList from './Components/MultipleActorsInMovie/MovieList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nconst App = () => {\n  _s();\n  const [actorsByYear, setActorsByYear] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Load data on component mount\n  useEffect(() => {\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios.get(`${BASE_URL}/actors/2000-2015`).then(response => setActorsByYear(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios.get(`${BASE_URL}/movies/ratings`).then(response => setRatings(response.data)).catch(error => setError(error.response.data));\n  }, []);\n  const handleUpdateRatings = () => {\n    axios.put('http://localhost:3001/movies/quentin_tarantino').then(response => setMessage(response.data)).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MovieSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Actors Who Acted in a Movie Before 2000 and After 2015\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), actorsByYear.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: actorsByYear.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: actor.Act_Name\n        }, actor.Act_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No actors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), ratings.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [rating.Mov_Title, \": \", rating.Max_Stars, \" stars\"]\n        }, rating.Mov_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ratings found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movie Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateRatings,\n          children: \"Update Quentin Tarantino Ratings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BBoTPD8ILswXZd/6wu1frdE/liY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieSearch","MovieList","BASE_URL","App","actorsByYear","setActorsByYear","ratings","setRatings","error","setError","message","setMessage","get","then","response","data","catch","handleUpdateRatings","put","console","length","map","actor","Act_Name","Act_id","rating","Mov_Title","Max_Stars","Mov_id"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieSearch from './Components/MovieSearch/MovieSearch';\nimport MovieList from './Components/MultipleActorsInMovie/MovieList';\nimport './App.css'\n\nconst BASE_URL = 'http://localhost:3001';\n\nconst App = () => {\n  const [actorsByYear, setActorsByYear] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Load data on component mount\n  useEffect(() => {\n    \n\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios\n      .get(`${BASE_URL}/actors/2000-2015`)\n      .then((response) => setActorsByYear(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios\n      .get(`${BASE_URL}/movies/ratings`)\n      .then((response) => setRatings(response.data))\n      .catch((error) => setError(error.response.data));\n  }, []);\n\n  const handleUpdateRatings = () => {\n    axios\n      .put('http://localhost:3001/movies/quentin_tarantino')\n      .then((response) => setMessage(response.data))\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className='App'>\n      <>\n\n        <MovieSearch />\n        <MovieList/>\n        \n        \n\n        \n\n        <h1>Actors Who Acted in a Movie Before 2000 and After 2015</h1>\n        {actorsByYear.length > 0 ? (\n          <ul>\n            {actorsByYear.map((actor) => (\n              <li key={actor.Act_id}>{actor.Act_Name}</li>\n            ))}\n          </ul>\n        ) : (\n          <p>No actors found.</p>\n        )}\n\n        <h1>Movie Ratings</h1>\n        {ratings.length > 0 ? (\n          <ul>\n            {ratings.map((rating) => (\n              <li key={rating.Mov_id}>\n                {rating.Mov_Title}: {rating.Max_Stars} stars\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No ratings found.</p>\n        )}\n\n        <div>\n          <h1>Movie Database</h1>\n          <button onClick={handleUpdateRatings}>\n            Update Quentin Tarantino Ratings\n          </button>\n          <p>{message}</p>\n        </div>\n      </>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}