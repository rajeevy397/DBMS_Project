{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\Components\\\\Actors2000And2015\\\\Actors2000And2015.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nconst Actors2000And2015 = () => {\n  _s();\n  useEffect(() => {\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios.get(`${BASE_URL}/actors/2000-2015`).then(response => setActorsByYear(response.data)).catch(error => setError(error.response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actors Who Acted in a Movie Before 2000 and After 2015\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), actorsByYear.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: actorsByYear.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: actor.Act_Name\n      }, actor.Act_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No actors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Actors2000And2015, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Actors2000And2015;\nexport default Actors2000And2015;\nvar _c;\n$RefreshReg$(_c, \"Actors2000And2015\");","map":{"version":3,"names":["React","useState","useEffect","axios","BASE_URL","Actors2000And2015","get","then","response","setActorsByYear","data","catch","error","setError","actorsByYear","length","map","actor","Act_Name","Act_id"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/Components/Actors2000And2015/Actors2000And2015.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nconst BASE_URL = 'http://localhost:3001';\r\n\r\nconst Actors2000And2015 = () => {\r\n\r\n    \r\n  useEffect(() => {\r\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\r\n    axios\r\n      .get(`${BASE_URL}/actors/2000-2015`)\r\n      .then((response) => setActorsByYear(response.data))\r\n      .catch((error) => setError(error.response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Actors Who Acted in a Movie Before 2000 and After 2015</h1>\r\n      {actorsByYear.length > 0 ? (\r\n        <ul>\r\n          {actorsByYear.map((actor) => (\r\n            <li key={actor.Act_id}>{actor.Act_Name}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No actors found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actors2000And2015;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAG9BH,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFG,GAAG,CAAE,GAAEF,QAAS,mBAAkB,CAAC,CACnCG,IAAI,CAAEC,QAAQ,IAAKC,eAAe,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAClDC,KAAK,CAAEC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA,UAAI;IAAsD;MAAA;MAAA;MAAA;IAAA,QAAK,EAC9DI,YAAY,CAACC,MAAM,GAAG,CAAC,gBACtB;MAAA,UACGD,YAAY,CAACE,GAAG,CAAEC,KAAK,iBACtB;QAAA,UAAwBA,KAAK,CAACC;MAAQ,GAA7BD,KAAK,CAACE,MAAM;QAAA;QAAA;QAAA;MAAA,QACtB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,gBAEL;MAAA,UAAG;IAAgB;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAzBId,iBAAiB;AAAA,KAAjBA,iBAAiB;AA2BvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}