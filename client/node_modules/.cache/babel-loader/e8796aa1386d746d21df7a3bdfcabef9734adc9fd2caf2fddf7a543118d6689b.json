{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\Components\\\\MovieSearch\\\\MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './MovieSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nfunction MovieSearch() {\n  _s();\n  const [director, setDirector] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [moviesByJames, setMoviesByJames] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch movies directed by 'james_cameron'\n    axios.get(`${BASE_URL}/movies/james_cameron`).then(response => setMoviesByJames(response.data)).catch(error => setError(error.response.data));\n  });\n  const handleDirectorChange = event => {\n    setDirector(event.target.value);\n  };\n  const handleSearch = () => {\n    axios.get(`http://localhost:3001/movies/director?name=${director}`).then(response => {\n      setMovies(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_by_james\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies Directed by james_cameron\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: getMoviesByJames,\n            children: \"getMoviesByJames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: moviesByJames.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: movie.Mov_Title\n            }, movie.Mov_Title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieSearch\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movie Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieSearchContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"user\",\n            placeholder: \"Search By Director Name\",\n            required: true,\n            value: director,\n            onChange: handleDirectorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleSearch,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: movie.Mov_Title\n          }, movie.Mov_Title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MovieSearch, \"ZAoCoC64C0yNAdMnE0yNf4M3acg=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","BASE_URL","MovieSearch","director","setDirector","movies","setMovies","moviesByJames","setMoviesByJames","error","setError","get","then","response","data","catch","handleDirectorChange","event","target","value","handleSearch","console","getMoviesByJames","map","movie","Mov_Title"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/Components/MovieSearch/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './MovieSearch.css';\r\n\r\nconst BASE_URL = 'http://localhost:3001';\r\n\r\nfunction MovieSearch() {\r\n  const [director, setDirector] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [moviesByJames, setMoviesByJames] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch movies directed by 'james_cameron'\r\n    axios\r\n      .get(`${BASE_URL}/movies/james_cameron`)\r\n      .then((response) => setMoviesByJames(response.data))\r\n      .catch((error) => setError(error.response.data));\r\n  });\r\n\r\n\r\n  \r\n\r\n  const handleDirectorChange = (event) => {\r\n    setDirector(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    axios\r\n      .get(`http://localhost:3001/movies/director?name=${director}`)\r\n      .then((response) => {\r\n        setMovies(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"movie_by_james\">\r\n          <h1>Movies Directed by james_cameron</h1>\r\n          <div>\r\n\r\n          <button className=\"button\" onClick={getMoviesByJames}>\r\n          getMoviesByJames\r\n            </button>\r\n            <ul>\r\n            {moviesByJames.map((movie) => (\r\n              <li key={movie.Mov_Title}>{movie.Mov_Title}</li>\r\n            ))}\r\n          </ul>\r\n            {/* {moviesByJames.length > 0 ? (\r\n              <ul>\r\n                {moviesByJames.map((movie) => (\r\n                  <li key={movie.Mov_id}>{movie.Mov_Title}</li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No movies found.</p>\r\n            )} */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"movieSearch\">\r\n          <h1>Movie Search</h1>\r\n          <div className=\"movieSearchContent\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"user\"\r\n              placeholder=\"Search By Director Name\"\r\n              required={true}\r\n              value={director}\r\n              onChange={handleDirectorChange}\r\n            />\r\n            \r\n            <button className=\"button\" onClick={handleSearch}>\r\n              Search\r\n            </button>\r\n          </div>\r\n          <ul>\r\n            {movies.map((movie) => (\r\n              <li key={movie.Mov_Title}>{movie.Mov_Title}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC;AAAA;AAE3B,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFW,GAAG,CAAE,GAAEV,QAAS,uBAAsB,CAAC,CACvCW,IAAI,CAAEC,QAAQ,IAAKL,gBAAgB,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CACnDC,KAAK,CAAEN,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC;EAKF,MAAME,oBAAoB,GAAIC,KAAK,IAAK;IACtCb,WAAW,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzBpB,KAAK,CACFW,GAAG,CAAE,8CAA6CR,QAAS,EAAC,CAAC,CAC7DS,IAAI,CAAEC,QAAQ,IAAK;MAClBP,SAAS,CAACO,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEN,KAAK,IAAK;MAChBY,OAAO,CAACZ,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC7B;UAAA,UAAI;QAAgC;UAAA;UAAA;UAAA;QAAA,QAAK,eACzC;UAAA,wBAEA;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEa,gBAAiB;YAAA,UAAC;UAEpD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAA,UACCf,aAAa,CAACgB,GAAG,CAAEC,KAAK,iBACvB;cAAA,UAA2BA,KAAK,CAACC;YAAS,GAAjCD,KAAK,CAACC,SAAS;cAAA;cAAA;cAAA;YAAA,QACzB;UAAC;YAAA;YAAA;YAAA;UAAA,QACC;QAAA;UAAA;UAAA;UAAA;QAAA,QAUC;MAAA;QAAA;QAAA;QAAA;MAAA,QACF,eAEN;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,UAAI;QAAY;UAAA;UAAA;UAAA;QAAA,QAAK,eACrB;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBACjC;YACE,IAAI,EAAC,MAAM;YACX,SAAS,EAAC,MAAM;YAChB,WAAW,EAAC,yBAAyB;YACrC,QAAQ,EAAE,IAAK;YACf,KAAK,EAAEtB,QAAS;YAChB,QAAQ,EAAEa;UAAqB;YAAA;YAAA;YAAA;UAAA,QAC/B,eAEF;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEI,YAAa;YAAA,UAAC;UAElD;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAA,UACGf,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChB;YAAA,UAA2BA,KAAK,CAACC;UAAS,GAAjCD,KAAK,CAACC,SAAS;YAAA;YAAA;YAAA;UAAA,QACzB;QAAC;UAAA;UAAA;UAAA;QAAA,QACC;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP;AAAC,GApFQvB,WAAW;AAAA,KAAXA,WAAW;AAsFpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}