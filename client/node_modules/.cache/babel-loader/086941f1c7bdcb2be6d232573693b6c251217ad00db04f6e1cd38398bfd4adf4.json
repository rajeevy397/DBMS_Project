{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\Components\\\\MultipleActorsInMovie\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nfunction MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    // Fetch movies with multiple actors\n    axios.get(`${BASE_URL}/movies/multiple-actors`).then(response => setMovies(response.data)).catch(error => setError(error.response.data));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movies with Multiple Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.Mov_Title\n        }, movie.Mov_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","axios","BASE_URL","MovieList","movies","setMovies","get","then","response","data","catch","error","setError","length","map","movie","Mov_Title","Mov_id"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/Components/MultipleActorsInMovie/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:3001';\r\n\r\nfunction MovieList() {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    // Fetch movies with multiple actors\r\n    axios\r\n      .get(`${BASE_URL}/movies/multiple-actors`)\r\n      .then((response) => setMovies(response.data))\r\n      .catch((error) => setError(error.response.data));\r\n  });\r\n\r\n  return(\r\n    <>\r\n      <div>\r\n      <h1>Movies with Multiple Actors</h1>\r\n        {movies.length > 0 ? (\r\n          <ul>\r\n            {movies.map((movie) => (\r\n              <li key={movie.Mov_id}>{movie.Mov_Title}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No movies found.</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,SAASC,SAAS,GAAG;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFK,GAAG,CAAE,GAAEJ,QAAS,yBAAwB,CAAC,CACzCK,IAAI,CAAEC,QAAQ,IAAKH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACH,QAAQ,CAACC,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE;MAAA,wBACA;QAAA,UAAI;MAA2B;QAAA;QAAA;QAAA;MAAA,QAAK,EACjCL,MAAM,CAACS,MAAM,GAAG,CAAC,gBAChB;QAAA,UACGT,MAAM,CAACU,GAAG,CAAEC,KAAK,iBAChB;UAAA,UAAwBA,KAAK,CAACC;QAAS,GAA9BD,KAAK,CAACE,MAAM;UAAA;UAAA;UAAA;QAAA,QACtB;MAAC;QAAA;QAAA;QAAA;MAAA,QACC,gBAEL;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA;EACG,iBACL;AAEP;AAAC,GA1BQd,SAAS;AAAA,KAATA,SAAS;AA4BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}