{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajeev\\\\Desktop\\\\DBMS\\\\MovieApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieSearch from './Components/MovieSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:3001';\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [moviesByJames, setMoviesByJames] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [actorsByYear, setActorsByYear] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Load data on component mount\n  useEffect(() => {\n    // Fetch movies directed by 'james_cameron'\n    axios.get(`${BASE_URL}/movies/james_cameron`).then(response => setMoviesByJames(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch movies with multiple actors\n    axios.get(`${BASE_URL}/movies/multiple-actors`).then(response => setMovies(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios.get(`${BASE_URL}/actors/2000-2015`).then(response => setActorsByYear(response.data)).catch(error => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios.get(`${BASE_URL}/movies/ratings`).then(response => setRatings(response.data)).catch(error => setError(error.response.data));\n  }, []);\n  const handleUpdateRatings = () => {\n    axios.put('http://localhost:3001/movies/quentin_tarantino').then(response => setMessage(response.data)).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MovieSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies Directed by james_cameron\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), moviesByJames.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: moviesByJames.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.Mov_Title\n      }, movie.Mov_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies with Multiple Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.Mov_Title\n      }, movie.Mov_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Actors Who Acted in a Movie Before 2000 and After 2015\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), actorsByYear.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: actorsByYear.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: actor.Act_Name\n      }, actor.Act_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No actors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), ratings.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [rating.Mov_Title, \": \", rating.Max_Stars, \" stars\"]\n      }, rating.Mov_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No ratings found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateRatings,\n        children: \"Update Quentin Tarantino Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Doi0NmsugRgIV9bNem2vtEZzqjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieSearch","BASE_URL","App","movies","setMovies","moviesByJames","setMoviesByJames","actors","setActors","actorsByYear","setActorsByYear","ratings","setRatings","error","setError","message","setMessage","get","then","response","data","catch","handleUpdateRatings","put","console","length","map","movie","Mov_Title","Mov_id","actor","Act_Name","Act_id","rating","Max_Stars"],"sources":["C:/Users/Rajeev/Desktop/DBMS/MovieApp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieSearch from './Components/MovieSearch';\n\nconst BASE_URL = 'http://localhost:3001';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [moviesByJames, setMoviesByJames] = useState([]);\n  const [actors, setActors] = useState([]);\n  const [actorsByYear, setActorsByYear] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Load data on component mount\n  useEffect(() => {\n    // Fetch movies directed by 'james_cameron'\n    axios\n      .get(`${BASE_URL}/movies/james_cameron`)\n      .then((response) => setMoviesByJames(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch movies with multiple actors\n    axios\n      .get(`${BASE_URL}/movies/multiple-actors`)\n      .then((response) => setMovies(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch actors who acted in a movie before 2000 and also in a movie after 2015\n    axios\n      .get(`${BASE_URL}/actors/2000-2015`)\n      .then((response) => setActorsByYear(response.data))\n      .catch((error) => setError(error.response.data));\n\n    // Fetch movie ratings\n    axios\n      .get(`${BASE_URL}/movies/ratings`)\n      .then((response) => setRatings(response.data))\n      .catch((error) => setError(error.response.data));\n  }, []);\n\n\n  const handleUpdateRatings = () => {\n    axios.put('http://localhost:3001/movies/quentin_tarantino')\n      .then(response => setMessage(response.data))\n      .catch(error => console.error(error));\n  };\n  \n\n  return (\n    <div>\n    \n    <MovieSearch/>\n      <h1>Movies Directed by james_cameron</h1>\n      {moviesByJames.length > 0 ? (\n        <ul>\n          {moviesByJames.map((movie) => (\n            <li key={movie.Mov_id}>{movie.Mov_Title}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n\n      <h1>Movies with Multiple Actors</h1>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.Mov_id}>{movie.Mov_Title}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No movies found.</p>\n      )}\n\n      <h1>Actors Who Acted in a Movie Before 2000 and After 2015</h1>\n      {actorsByYear.length > 0 ? (\n        <ul>\n          {actorsByYear.map((actor) => (\n            <li key={actor.Act_id}>{actor.Act_Name}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No actors found.</p>\n      )}\n\n      <h1>Movie Ratings</h1>\n      {ratings.length > 0 ? (\n        <ul>\n          {ratings.map((rating) => (\n            <li key={rating.Mov_id}>\n              {rating.Mov_Title}: {rating.Max_Stars} stars\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No ratings found.</p>\n      )}\n\n      <div>\n      <h1>Movie Database</h1>\n      <button onClick={handleUpdateRatings}>Update Quentin Tarantino Ratings</button>\n      <p>{message}</p>\n    </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}